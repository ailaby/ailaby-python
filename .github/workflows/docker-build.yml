name: Docker Build

on:
  workflow_dispatch:
  #push:
  #  branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1
  LATEST_CUDA: "all-cuda-12.5.0-runtime-22.04"
  LATEST_ROCM: "all-rocm-5.7-runtime-22.04"
  LATEST_CPU: "all-cpu-22.04"

jobs:
  cpu-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - ["3.10", "python_310"]
          - ["3.11", "python_311"]
          - ["3.12", "python_312"]
          - ["all", "python_310"]
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Permissions fixes
        run: |
          reponame="$(basename ${GITHUB_REPOSITORY})"
          target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
          chmod -R ug+rwX ${target}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.python[0] }}-cpu-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_CPU }} ]]; then
              TAGS="${img_path}:latest-cpu, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ailaby/base:cpu-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.python[0] }}
            PYTHON_MAMBA_NAME=${{ matrix.python[1] }}
          push: true
          # Avoids unknown/unknown architecture and extra metadata
          provenance: false
          tags: ${{ env.TAGS }}
    
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - ["3.10", "python_310"]
          - ["3.11", "python_311"]
          - ["3.12", "python_312"]
          - ["all", "python_310"]
        cuda:
          - 11.8.0
          - 12.1.1
          - 12.5.0
        level:
          - "base"
          - "runtime"
          - "devel"
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Permissions fixes
        run: |
          reponame="$(basename ${GITHUB_REPOSITORY})"
          target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
          chmod -R ug+rwX ${target}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.python[0] }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_CUDA }} ]]; then
              TAGS="${img_path}:latest, ${img_path}:latest-cuda, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ailaby/base:cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.python[0] }}
            PYTHON_MAMBA_NAME=${{ matrix.python[1] }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}

  amd-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - ["3.10", "python_310"]
          - ["3.11", "python_311"]
          - ["3.12", "python_312"]
          - ["all", "python_310"]
        rocm:
          - 5.6
          - 5.7
          - 6.0.2
        level:
          - "core"
          - "runtime"
          - "devel"
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Permissions fixes
        run: |
          reponame="$(basename ${GITHUB_REPOSITORY})"
          target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
          chmod -R ug+rwX ${target}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.python[0] }}-rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_ROCM }} ]]; then
              TAGS="${img_path}:latest-rocm, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ailaby/base:rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.python[0] }}
            PYTHON_MAMBA_NAME=${{ matrix.python[1] }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}
